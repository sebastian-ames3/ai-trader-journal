{
  "mcpServers": {
    "playwright": {
      "command": "npx",
      "args": [
        "@playwright/mcp@latest",
        "--headless"
      ],
      "description": "Microsoft's official Playwright MCP server for browser automation using accessibility tree. Provides fast, deterministic UI testing and verification."
    },
    "git": {
      "command": "npx",
      "args": [
        "-y",
        "@cyanheads/git-mcp-server"
      ],
      "description": "Comprehensive Git operations including clone, commit, branch, diff, log, blame, merge, rebase, and worktree management with security sandboxing.",
      "env": {
        "GIT_BASE_DIR": "/mnt/c/Users/14102/Documents/Sebastian Ames/Projects/ai-trader-journal",
        "VERBOSITY": "standard"
      }
    },
    "postgres": {
      "command": "npx",
      "args": [
        "-y",
        "@zeddotdev/postgres-context-server@latest",
        "postgresql://postgres.wloixbepgqerpevmogwr:${SUPABASE_PASSWORD}@db.wloixbepgqerpevmogwr.supabase.co:6543/postgres?pgbouncer=true"
      ],
      "description": "Secure PostgreSQL MCP server with SQL injection vulnerability patched (Zed fork). Provides read-only database access for schema inspection and queries.",
      "env": {
        "SUPABASE_PASSWORD": "${SUPABASE_PASSWORD}"
      }
    }
  }
}
